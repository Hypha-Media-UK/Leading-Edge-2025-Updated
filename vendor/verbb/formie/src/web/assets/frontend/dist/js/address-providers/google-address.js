!function(){"use strict";class t{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.$form=t.$form,this.form=this.$form.form,this.$field=t.$field,this.$locationBtn=this.$field.querySelector("[data-fui-address-location-btn]"),this.loadingClass=this.form.getClasses("loading"),this.initLocationBtn()}initLocationBtn(){this.$locationBtn&&this.form.addEventListener(this.$locationBtn,function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return e||(e=Math.random().toString(36).substr(2,5)),`${t}.${e}`}("click"),(t=>{t.preventDefault(),this.onStartFetchLocation(),navigator.geolocation?navigator.geolocation.getCurrentPosition((t=>{this.onCurrentLocation(t)}),(t=>{console.log(`Unable to fetch location ${t.code}.`),this.onEndFetchLocation()}),{enableHighAccuracy:!0}):(console.log("Browser does not support geolocation."),this.onEndFetchLocation())}))}onCurrentLocation(t){this.onEndFetchLocation()}onStartFetchLocation(){var t,e;t=this.$locationBtn,e=this.loadingClass,t&&e&&("string"==typeof e&&(e=e.split(" ")),e.forEach((e=>{t.classList.add(e)}))),this.$locationBtn.setAttribute("aria-disabled",!0)}onEndFetchLocation(){var t,e;t=this.$locationBtn,e=this.loadingClass,t&&e&&("string"==typeof e&&(e=e.split(" ")),e.forEach((e=>{t.classList.remove(e)}))),this.$locationBtn.setAttribute("aria-disabled",!1)}}function e(t,e){var o=Object.keys(t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),o.push.apply(o,i)}return o}function o(t,e,o){return e=function(t){var e=function(t,e){if("object"!=typeof t||!t)return t;var o=t[Symbol.toPrimitive];if(void 0!==o){var i=o.call(t,e||"default");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===e?String:Number)(t)}(t,"string");return"symbol"==typeof e?e:String(e)}(e),e in t?Object.defineProperty(t,e,{value:o,enumerable:!0,configurable:!0,writable:!0}):t[e]=o,t}window.FormieAddressProvider=t;window.FormieGoogleAddress=class extends t{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(t),this.$form=t.$form,this.form=this.$form.form,this.$field=t.$field,this.$input=this.$field.querySelector("[data-autocomplete]"),this.scriptId="FORMIE_GOOGLE_ADDRESS_SCRIPT",this.appId=t.appId,this.apiKey=t.apiKey,this.geocodingApiKey=t.geocodingApiKey||t.apiKey,this.options=t.options,this.retryTimes=0,this.maxRetryTimes=150,this.waitTimeout=200,this.$input?this.initScript():console.error("Unable to find input `[data-autocomplete]`.")}initScript(){if(document.getElementById(this.scriptId))this.waitForLoad();else{const t=document.createElement("script");t.src=`https://maps.googleapis.com/maps/api/js?key=${this.apiKey}&loading=async&libraries=places`,t.defer=!0,t.async=!0,t.id=this.scriptId,t.onload=()=>{this.waitForLoad()},document.body.appendChild(t)}}waitForLoad(){this.retryTimes>this.maxRetryTimes?console.error(`Unable to load Google API after ${this.retryTimes} times.`):"undefined"==typeof google||void 0===google.maps||void 0===google.maps.places?(this.retryTimes+=1,setTimeout(this.waitForLoad.bind(this),this.waitTimeout)):this.initAutocomplete()}initAutocomplete(){const t=function(t){for(var i=1;i<arguments.length;i++){var s=null!=arguments[i]?arguments[i]:{};i%2?e(Object(s),!0).forEach((function(e){o(t,e,s[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(s)):e(Object(s)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(s,e))}))}return t}({types:["geocode"]},this.options),i=new google.maps.places.PlaceAutocompleteElement(t);i.style.height=window.getComputedStyle(this.$input).height,i.style.boxSizing="border-box";let s=this.$input.parentElement;s&&s.classList.contains("fui-autocomplete-wrapper")||(s=document.createElement("div"),s.classList.add("fui-autocomplete-wrapper"),this.$input.parentNode.insertBefore(s,this.$input),s.appendChild(this.$input)),s.replaceChild(i,this.$input);const n=this.$input;n.type="hidden",n.name=this.$input.name,s.appendChild(n),i.addEventListener("gmp-select",(async t=>{let{placePrediction:e}=t;const o=e.toPlace();if(await o.fetchFields({fields:["addressComponents"]}),!o.addressComponents)return;this.setAddressValues(o.addressComponents);const i=new CustomEvent("populateAddress",{bubbles:!0,detail:{addressProvider:this,addressComponents:o.addressComponents}});this.$field.dispatchEvent(i)}))}setAddressValues(t){const e={},o=this.componentMap();for(let i=0;i<t.length;i++){const[s]=t[i].types;o[s]&&(e[s]=t[i][o[s]])}if(e.street_number&&e.route){let t=`${e.street_number} ${e.route}`;e.subpremise&&(t=`${e.subpremise}/${t}`),this.setFieldValue("[data-address1]",t)}this.setFieldValue("[data-city]",e.locality,e.postal_town),this.setFieldValue("[data-zip]",e.postal_code),this.setFieldValue("[data-state]",e.administrative_area_level_1),this.setFieldValue("[data-country]",e.country)}onCurrentLocation(t){const{latitude:e,longitude:o}=t.coords,i=new XMLHttpRequest;i.open("POST",window.location.href,!0),i.setRequestHeader("X-Requested-With","XMLHttpRequest"),i.setRequestHeader("Accept","application/json"),i.setRequestHeader("Cache-Control","no-cache"),i.timeout=1e4,i.ontimeout=()=>{console.log("The request timed out.")},i.onerror=t=>{console.log("The request encountered a network error. Please try again.")},i.onload=()=>{if(this.onEndFetchLocation(),i.status>=200&&i.status<300)try{const t=JSON.parse(i.responseText);t&&t.results&&t.results[0]&&t.results[0].address_components&&this.setAddressValues(t.results[0].address_components),(t.error_message||t.error)&&console.log(t)}catch(t){console.log(t)}else console.log(`${i.status}: ${i.statusText}`)};const s=new FormData;s.append("action","formie/address/google-places-geocode"),s.append("latlng",`${e},${o}`),s.append("key",this.geocodingApiKey),i.send(s)}componentMap(){return{subpremise:"shortText",street_number:"shortText",route:"longText",postal_town:"longText",locality:"longText",administrative_area_level_1:"shortText",country:"shortText",postal_code:"shortText"}}setFieldValue(t,e,o){this.$field.querySelector(t)&&(this.$field.querySelector(t).value=e||o||"")}}}();